datasource db {
  url      = env("DATABASE_URL")
  provider = "postgresql"
}

generator client {
  provider = "prisma-client-js"
}

model Restaurant {
  id           Int       @id @default(autoincrement())
  name         String
  address      String
  phoneNumber  String?
  email        String?
  openingHours String?
  menus        Menu[]
  orders       CustomerOrder[]
}

model User {
  id          Int          @id @default(autoincrement())
  username    String       @unique
  password    String
  email       String       @unique
  fullName    String?
  address     String?
  phoneNumber String?
  role        String // customer, driver, admin
  driver      Driver?
  orders      CustomerOrder[]
}

model Driver {
  id          Int       @id @default(autoincrement())
  userId      Int       @unique
  vehicleInfo String?
  availability Boolean   @default(true)
  user        User      @relation(fields: [userId], references: [id])
  orders      CustomerOrder[]
}

model Menu {
  id          Int        @id @default(autoincrement())
  restaurantId Int
  name        String
  description String?
  price       Float
  restaurant  Restaurant @relation(fields: [restaurantId], references: [id])
  orderItems  OrderItem[]
}

model OrderStatus {
  id          Int        @id @default(autoincrement())
  statusName  String // pending, confirmed, preparing, delivered, delayed, cancelled, waiting for delivery
  orders      CustomerOrder[]
}

model CustomerOrder {
  id               Int          @id @default(autoincrement())
  userId           Int
  restaurantId     Int
  driverId         Int?
  orderDate        DateTime     @default(now())
  deliveryAddress  String
  totalPrice       Float
  statusId         Int
  specialInstructions String?
  user             User         @relation(fields: [userId], references: [id])
  restaurant       Restaurant   @relation(fields: [restaurantId], references: [id])
  driver           Driver?      @relation(fields: [driverId], references: [id])
  status           OrderStatus  @relation(fields: [statusId], references: [id])
  orderItems       OrderItem[]
}

model OrderItem {
  id          Int        @id @default(autoincrement())
  orderId     Int
  menuId      Int
  quantity    Int
  itemPrice   Float
  order       CustomerOrder @relation(fields: [orderId], references: [id])
  menu        Menu          @relation(fields: [menuId], references: [id])
}
